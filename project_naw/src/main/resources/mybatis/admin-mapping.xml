<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.adminMapper">
	
	<!-- item -->
	
	<insert id="itemWrite" parameterType="itemDTO">
		<![CDATA[insert into itemView 
		(item_code, item_seq, item_category1, item_category2, item_category3, 
		item_name, item_image1, item_image2, item_details, item_size, item_color, 
		cart_qty, item_price, item_date)
		values
		(#{item_code}, seq_item.nextval, #{item_category1}, #{item_category2}, #{item_category3}, 
		#{item_name}, #{item_image1}, #{item_image2}, #{item_details}, 
		#{item_size}, #{item_color}, #{cart_qty}, #{item_price}, sysdate)]]>
	</insert>
	
	<update id="itemModify" parameterType="itemDTO">
		<![CDATA[update itemView set item_category1=#{item_category1}, item_category2=#{item_category2}, item_category3=#{item_category3}, 
		item_name=#{item_name}, item_details=#{item_details}, item_image1=#{item_image1}, item_image2=#{item_image2}, 
		item_price=#{item_price}, item_color=#{item_color}, item_size=#{item_size} 
		where item_code=#{item_code}]]>
	</update>
	
	<delete id="itemDelete" parameterType="String">
		<![CDATA[delete itemView where item_code=#{item_code}]]>
	</delete>
	
	
	
	<!-- member -->
	
	<select id="memberList" parameterType="java.util.Map" resultType="profileDTO">
		<![CDATA[select 
		user_id, 
		user_pwd, 
		user_name, 
		user_phone, 
		user_email, 
		user_addr1, 
		user_addr2, 
		user_gender, 
		to_char(user_birth, 'YYYY.MM.DD')as user_birth, 
		to_char(user_joindate, 'YYYY.MM.DD')as user_joindate from
		(select rownum rn, tt.* from
		(select * from profile 
		order by user_joindate desc) tt)
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<select id="memberListSearchByName" parameterType="java.util.Map" resultType="profileDTO">
		<![CDATA[select 
		user_id, 
		user_pwd, 
		user_name, 
		user_phone, 
		user_email, 
		user_addr1, 
		user_addr2, 
		user_gender, 
		to_char(user_birth, 'YYYY.MM.DD')as user_birth, 
		to_char(user_joindate, 'YYYY.MM.DD')as user_joindate from
		(select rownum rn, tt.* from
		(select * from profile 
		where user_name=#{user_name, jdbcType=VARCHAR} 
		order by user_joindate desc) tt)
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<select id="memberView" parameterType="int" resultType="profileDTO">
		<![CDATA[select * from profile where user_id=#{user_id}]]>
	</select>
	
	<select id="getTotalProfile" resultType="int">
		<![CDATA[select count(*) as cnt from profile]]>
	</select>
	
	<select id="getTotalProfileSearchByName" parameterType="String" resultType="int">
		<![CDATA[select count(*) as cnt from profile
		where user_name=#{user_name}]]>
	</select>
	
	
	<!-- sales -->
	
	
	<!-- 0. 총 주문 횟수 (for 페이징처리) -->
	<select id="getTotalNumberOfOrders" resultType="int">
		<![CDATA[select count(*) as cnt 
		from (select rownum rn, tt.* from 
		(select * from order_page 
        inner join itemView 
		on order_page.ord_name = itemView.item_name 
        order by ord_date asc) tt)]]>
	</select>
	
	
	
	
	<!-- 1. 전체 -->
	
	<!-- 매출목록 -->
	<select id="salesList" parameterType="java.util.Map" resultType="salesDTO">
		<!-- 매출일자 상품코드 상품명 상세(카테고리1>2>3) 사이즈 색상 가격(단가) 수량 총가격(매출액) -->
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
        inner join itemView 
		on order_page.ord_name = itemView.item_name 
        order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 총매출액 -->
	<select id="totalSales" resultType="int">
		<![CDATA[select sum(ord_totalprice) from order_page]]>
	</select>
	
	
	
	
	<!-- 2. 날짜별 - 연,월,일별 -->
	
	<!-- 연도별 매출목록 -->
	
	<select id="salesListByYear" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where extract(year from ord_date) = #{year} 
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 연도별 총매출액 -->
	<select id="salesByYear" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) from order_page 
		where extract(year from ord_date) = #{year}]]>
	</select>
	
	
	<!-- 연,월별 매출목록 -->
	<select id="salesListByMonth" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where extract(year from ord_date) = #{year} 
		and extract(month from ord_date) = #{month}
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 연,월별 총매출액 -->
	<select id="salesByMonth" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) from order_page 
		where extract(year from ord_date) = #{year} 
		and extract(month from ord_date) = #{month}]]>
	</select>
	
	
	<!-- 연,월,일별 매출목록 -->
	<select id="salesListByDay" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where extract(year from ord_date) = #{year} 
		and extract(month from ord_date) = #{month}
		and extract(day from ord_date) = #{day}
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 연,월,일별 총매출액 -->
	<select id="salesByDay" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) from order_page 
		where extract(year from ord_date) = #{year} 
		and extract(month from ord_date) = #{month} 
		and extract(day from ord_date) = #{day}]]>
	</select>
	
	
	
	
	<!-- 3. 카테고리별(카테고리1 > 카테고리2 > 카테고리3) 매출 -->
	
	<!-- 카테고리1 매출목록 -->
	<select id="salesListByCategory1" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where item_category1 = #{item_category1}
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 카테고리1 총매출액 -->
	<select id="salesByCategory1" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) from order_page 
		where item_category1 = #{item_category1}]]>
	</select>
	
	
	<!-- 카테고리1 > 카테고리2 매출목록 -->
	<select id="salesListByCategory2" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where item_category1 = #{item_category1} 
		and item_category2 = #{item_category2}
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 카테고리1 > 카테고리2 총매출액 -->
	<select id="salesByCategory2" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) from order_page 
		where item_category1 = #{item_category1} 
		and item_category2 = #{item_category2}]]>
	</select>
	
	
	<!-- 카테고리1 > 카테고리2 > 카테고리3 매출목록 -->
	<select id="salesListByCategory3" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where item_category1 = #{item_category1} 
		and item_category2 = #{item_category2}
		and item_category3 = #{item_category3}
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 카테고리1 > 카테고리2 > 카테고리3 총매출액 -->
	<select id="salesByCategory3" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) from order_page 
		where item_category1 = #{item_category1} 
		and item_category2 = #{item_category2} 
		and item_category3 = #{item_category3}]]>
	</select>
	
	
	
	<!-- 4. 성별 -->
	
	<!-- 성별 매출목록 -->
	<select id="salesListByGender" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where user_gender = #{user_gender}
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	
	<!-- 성별 총매출액 -->
	<select id="salesByGender" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) from order_page 
		inner join itemView  
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where user_gender = #{user_gender}]]>
	</select>
	
	
	
	
	<!-- 5. 연령별 -->
	
	<!-- 연령대별 매출목록 -->
	<select id="salesListByAgegroup" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		and trunc(months_between(sysdate, user_birth) / 12) >= #{user_agegroup} 
		and trunc(months_between(sysdate, user_birth) / 12) < #{user_agegroup + 10} 
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	
	
	<!-- 연령대별 총매출액 -->
	<select id="salesByAgegroup" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) 
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		and trunc(months_between(sysdate, user_birth) / 12) >= #{user_agegroup} 
		and trunc(months_between(sysdate, user_birth) / 12) < #{user_agegroup + 10} 
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum]]>
	</select>
	
	
	
	
	<!-- 4+5. 성별 + 연령별 -->
	
	<!-- 성별 + 연령대별 매출목록 -->
	<select id="salesListByGenderAgegroup" parameterType="java.util.Map" resultType="salesDTO">
		<![CDATA[select 
		to_char(ord_date, 'YYYY/MM/DD') as sales_date, 
        user_gender as sales_gender, 
        trunc(months_between(sysdate, user_birth) / 12) as sales_age, 
		item_code as sales_code, 
		ord_name as sales_name, 
		item_category1 as sales_category1, 
		item_category2 as sales_category2, 
		item_category3 as sales_category3, 
		ord_size as sales_size, 
		ord_color as sales_color, 
		ord_price as sales_price, 
		ord_qty as sales_qty, 
		ord_totalprice  as sales_totalprice
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where user_gender = #{user_gender}
		and trunc(months_between(sysdate, user_birth) / 12) >= #{user_agegroup} 
		and trunc(months_between(sysdate, user_birth) / 12) < #{user_agegroup + 10} 
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	<!-- 성별 + 연령대별 총매출액 -->
	<select id="salesByGenderAgegroup" parameterType="java.util.Map" resultType="int">
		<![CDATA[select 
		sum(ord_totalprice) 
		from (select rownum rn, tt.* from 
		(select * from order_page 
		inner join itemView 
		on order_page.ord_name = itemView.item_name 
		inner join profile
		on order_page.user_id = profile.user_id 
		where user_gender = #{user_gender}
		and trunc(months_between(sysdate, user_birth) / 12) >= #{user_agegroup} 
		and trunc(months_between(sysdate, user_birth) / 12) < #{user_agegroup + 10} 
		order by ord_date asc) tt) 
		where rn>=#{startNum} and rn<=#{endNum}]]>
	</select>
	
	
</mapper>